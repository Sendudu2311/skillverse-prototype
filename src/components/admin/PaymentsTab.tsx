import React, { useState } from 'react';
import './PaymentsTab.css';

const PaymentsTab: React.FC = () => {
  const [activeFilter, setActiveFilter] = useState<string>('all');
  const [currentPage, setCurrentPage] = useState(1);

  const transactions = [
    {
      id: 'TXN-001',
      user: 'Nguy·ªÖn VƒÉn A',
      type: 'Thanh to√°n bu·ªïi coaching',
      amount: 500000,
      status: 'completed',
      date: '2024-01-15',
      method: 'Visa ***1234'
    },
    {
      id: 'TXN-002',
      user: 'Tr·∫ßn Th·ªã B',
      type: 'R√∫t ti·ªÅn',
      amount: -300000,
      status: 'pending',
      date: '2024-01-15',
      method: 'Ng√¢n h√†ng ACB'
    },
    {
      id: 'TXN-003',
      user: 'L√™ VƒÉn C',
      type: 'Thanh to√°n premium',
      amount: 999000,
      status: 'failed',
      date: '2024-01-14',
      method: 'MasterCard ***5678'
    },
    {
      id: 'TXN-004',
      user: 'Ph·∫°m Th·ªã D',
      type: 'Ho√†n ti·ªÅn',
      amount: -150000,
      status: 'refunded',
      date: '2024-01-14',
      method: 'Visa ***9876'
    },
    {
      id: 'TXN-005',
      user: 'Ho√†ng VƒÉn E',
      type: 'N·∫°p SkillPoint',
      amount: 200000,
      status: 'completed',
      date: '2024-01-13',
      method: 'Momo'
    }
  ];

  const filteredTransactions = activeFilter === 'all' 
    ? transactions 
    : transactions.filter(tx => tx.status === activeFilter);

  const formatAmount = (amount: number) => {
    const formatted = Math.abs(amount).toLocaleString('vi-VN');
    return amount >= 0 ? `+${formatted} VNƒê` : `-${formatted} VNƒê`;
  };

  const getAmountClass = (amount: number) => {
    return amount >= 0 ? 'positive' : 'negative';
  };

  const getStatusText = (status: string) => {
    switch(status) {
      case 'completed': return 'Ho√†n th√†nh';
      case 'pending': return 'ƒêang x·ª≠ l√Ω';
      case 'failed': return 'Th·∫•t b·∫°i';
      case 'refunded': return 'ƒê√£ ho√†n ti·ªÅn';
      default: return status;
    }
  };

  const handleAction = (transactionId: string, action: string) => {
    console.log(`${action} transaction ${transactionId}`);
  };

  return (
    <div className="administrator-payments">
      <div className="administrator-payments-header">
        <h2>Qu·∫£n L√Ω Thanh To√°n</h2>
        <p>Theo d√µi v√† qu·∫£n l√Ω t·∫•t c·∫£ giao d·ªãch t√†i ch√≠nh tr√™n n·ªÅn t·∫£ng</p>
      </div>

      <div className="administrator-payments-overview">
        <div className="administrator-payments-card">
          <div className="administrator-payments-card-header">
            <div className="administrator-payments-card-icon">üí∞</div>
            <h3 className="administrator-payments-card-title">T·ªïng Doanh Thu</h3>
          </div>
          <div className="administrator-payments-card-amount">‚Ç´52.5M</div>
          <div className="administrator-payments-card-change positive">
            ‚Üó +12.5% so v·ªõi th√°ng tr∆∞·ªõc
          </div>
        </div>

        <div className="administrator-payments-card">
          <div className="administrator-payments-card-header">
            <div className="administrator-payments-card-icon">üìä</div>
            <h3 className="administrator-payments-card-title">Giao D·ªãch H√¥m Nay</h3>
          </div>
          <div className="administrator-payments-card-amount">127</div>
          <div className="administrator-payments-card-change positive">
            ‚Üó +8.3% so v·ªõi h√¥m qua
          </div>
        </div>

        <div className="administrator-payments-card">
          <div className="administrator-payments-card-header">
            <div className="administrator-payments-card-icon">‚è≥</div>
            <h3 className="administrator-payments-card-title">ƒêang Ch·ªù X·ª≠ L√Ω</h3>
          </div>
          <div className="administrator-payments-card-amount">23</div>
          <div className="administrator-payments-card-change negative">
            ‚Üò -5.2% so v·ªõi h√¥m qua
          </div>
        </div>

        <div className="administrator-payments-card">
          <div className="administrator-payments-card-header">
            <div className="administrator-payments-card-icon">üí≥</div>
            <h3 className="administrator-payments-card-title">Hoa H·ªìng Platform</h3>
          </div>
          <div className="administrator-payments-card-amount">‚Ç´2.8M</div>
          <div className="administrator-payments-card-change positive">
            ‚Üó +15.7% so v·ªõi th√°ng tr∆∞·ªõc
          </div>
        </div>
      </div>

      <div className="administrator-payments-filters">
        <button 
          className={`administrator-payments-filter ${activeFilter === 'all' ? 'active' : ''}`}
          onClick={() => setActiveFilter('all')}
        >
          T·∫•t c·∫£ giao d·ªãch
        </button>
        <button 
          className={`administrator-payments-filter ${activeFilter === 'completed' ? 'active' : ''}`}
          onClick={() => setActiveFilter('completed')}
        >
          Ho√†n th√†nh
        </button>
        <button 
          className={`administrator-payments-filter ${activeFilter === 'pending' ? 'active' : ''}`}
          onClick={() => setActiveFilter('pending')}
        >
          ƒêang x·ª≠ l√Ω
        </button>
        <button 
          className={`administrator-payments-filter ${activeFilter === 'failed' ? 'active' : ''}`}
          onClick={() => setActiveFilter('failed')}
        >
          Th·∫•t b·∫°i
        </button>
        <button 
          className={`administrator-payments-filter ${activeFilter === 'refunded' ? 'active' : ''}`}
          onClick={() => setActiveFilter('refunded')}
        >
          ƒê√£ ho√†n ti·ªÅn
        </button>
      </div>

      <div className="administrator-payments-table-container">
        <table className="administrator-payments-table">
          <thead>
            <tr>
              <th>ID Giao D·ªãch</th>
              <th>Ng∆∞·ªùi D√πng</th>
              <th>Lo·∫°i Giao D·ªãch</th>
              <th>S·ªë Ti·ªÅn</th>
              <th>Tr·∫°ng Th√°i</th>
              <th>Ph∆∞∆°ng Th·ª©c</th>
              <th>Ng√†y</th>
              <th>Thao T√°c</th>
            </tr>
          </thead>
          <tbody>
            {filteredTransactions.map((transaction) => (
              <tr key={transaction.id}>
                <td>
                  <span className="administrator-payments-transaction-id">
                    {transaction.id}
                  </span>
                </td>
                <td>
                  <div className="administrator-payments-user">
                    <div className="administrator-payments-user-avatar">
                      {transaction.user.charAt(0)}
                    </div>
                    <span>{transaction.user}</span>
                  </div>
                </td>
                <td>{transaction.type}</td>
                <td>
                  <span className={`administrator-payments-amount ${getAmountClass(transaction.amount)}`}>
                    {formatAmount(transaction.amount)}
                  </span>
                </td>
                <td>
                  <span className={`administrator-payments-status ${transaction.status}`}>
                    {getStatusText(transaction.status)}
                  </span>
                </td>
                <td>{transaction.method}</td>
                <td>{transaction.date}</td>
                <td>
                  <div className="administrator-payments-actions">
                    <button 
                      className="administrator-payments-action-btn view"
                      onClick={() => handleAction(transaction.id, 'view')}
                    >
                      Xem
                    </button>
                    {transaction.status === 'completed' && (
                      <button 
                        className="administrator-payments-action-btn refund"
                        onClick={() => handleAction(transaction.id, 'refund')}
                      >
                        Ho√†n ti·ªÅn
                      </button>
                    )}
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className="administrator-payments-pagination">
        <button 
          disabled={currentPage === 1}
          onClick={() => setCurrentPage(currentPage - 1)}
        >
          ‚Üê Tr∆∞·ªõc
        </button>
        <button className="active">1</button>
        <button onClick={() => setCurrentPage(2)}>2</button>
        <button onClick={() => setCurrentPage(3)}>3</button>
        <button onClick={() => setCurrentPage(currentPage + 1)}>
          Sau ‚Üí
        </button>
      </div>
    </div>
  );
};

export default PaymentsTab;
