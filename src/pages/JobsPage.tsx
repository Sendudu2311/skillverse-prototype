import React, { useState } from 'react';
import { Search, MapPin, Clock, DollarSign, Briefcase, Star, Filter, ArrowRight } from 'lucide-react';

const JobsPage = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');

  const categories = [
    { id: 'all', name: 'T·∫•t c·∫£', count: 89 },
    { id: 'data-entry', name: 'Nh·∫≠p li·ªáu', count: 23 },
    { id: 'design', name: 'Thi·∫øt k·∫ø', count: 18 },
    { id: 'writing', name: 'Vi·∫øt l√°ch', count: 15 },
    { id: 'research', name: 'Nghi√™n c·ª©u', count: 12 },
    { id: 'translation', name: 'D·ªãch thu·∫≠t', count: 11 },
    { id: 'social-media', name: 'Social Media', count: 10 }
  ];

  const jobs = [
    {
      id: 1,
      title: 'Thi·∫øt k·∫ø Logo cho Startup',
      company: 'TechViet Solutions',
      category: 'design',
      budget: '500,000 - 1,000,000ƒë',
      duration: '3-5 ng√†y',
      location: 'Remote',
      postedTime: '2 gi·ªù tr∆∞·ªõc',
      description: 'C·∫ßn thi·∫øt k·∫ø logo chuy√™n nghi·ªáp cho startup c√¥ng ngh·ªá. Y√™u c·∫ßu s√°ng t·∫°o, hi·ªán ƒë·∫°i v√† ph√π h·ª£p v·ªõi lƒ©nh v·ª±c fintech.',
      skills: ['Adobe Illustrator', 'Logo Design', 'Brand Identity'],
      urgency: 'high',
      proposals: 12,
      rating: 4.8,
      verified: true
    },
    {
      id: 2,
      title: 'Nh·∫≠p li·ªáu Excel t·ª´ PDF',
      company: 'Green Energy Corp',
      category: 'data-entry',
      budget: '200,000 - 300,000ƒë',
      duration: '1-2 ng√†y',
      location: 'Remote',
      postedTime: '4 gi·ªù tr∆∞·ªõc',
      description: 'C·∫ßn nh·∫≠p d·ªØ li·ªáu t·ª´ 50 file PDF v√†o Excel. D·ªØ li·ªáu bao g·ªìm th√¥ng tin kh√°ch h√†ng v√† ƒë∆°n h√†ng.',
      skills: ['Excel', 'Data Entry', 'Attention to Detail'],
      urgency: 'medium',
      proposals: 8,
      rating: 4.6,
      verified: true
    },
    {
      id: 3,
      title: 'Vi·∫øt Content Marketing Blog',
      company: 'Digital Marketing Hub',
      category: 'writing',
      budget: '800,000 - 1,200,000ƒë',
      duration: '1 tu·∫ßn',
      location: 'Remote',
      postedTime: '6 gi·ªù tr∆∞·ªõc',
      description: 'C·∫ßn vi·∫øt 5 b√†i blog v·ªÅ digital marketing, m·ªói b√†i 1000-1500 t·ª´. Y√™u c·∫ßu SEO-friendly v√† c√≥ kinh nghi·ªám marketing.',
      skills: ['Content Writing', 'SEO', 'Digital Marketing'],
      urgency: 'low',
      proposals: 15,
      rating: 4.9,
      verified: true
    },
    {
      id: 4,
      title: 'Nghi√™n c·ª©u Th·ªã tr∆∞·ªùng E-commerce',
      company: 'Online Retail Pro',
      category: 'research',
      budget: '1,500,000 - 2,000,000ƒë',
      duration: '2 tu·∫ßn',
      location: 'Remote',
      postedTime: '1 ng√†y tr∆∞·ªõc',
      description: 'Ph√¢n t√≠ch th·ªã tr∆∞·ªùng e-commerce Vi·ªát Nam, ƒë√°nh gi√° ƒë·ªëi th·ªß c·∫°nh tranh v√† xu h∆∞·ªõng ng∆∞·ªùi ti√™u d√πng.',
      skills: ['Market Research', 'Data Analysis', 'Excel'],
      urgency: 'medium',
      proposals: 6,
      rating: 4.7,
      verified: false
    },
    {
      id: 5,
      title: 'D·ªãch t√†i li·ªáu Anh-Vi·ªát',
      company: 'Global Translate',
      category: 'translation',
      budget: '300,000 - 500,000ƒë',
      duration: '3 ng√†y',
      location: 'Remote',
      postedTime: '1 ng√†y tr∆∞·ªõc',
      description: 'D·ªãch t√†i li·ªáu k·ªπ thu·∫≠t t·ª´ ti·∫øng Anh sang ti·∫øng Vi·ªát, kho·∫£ng 20 trang A4.',
      skills: ['English Translation', 'Technical Writing', 'Vietnamese'],
      urgency: 'high',
      proposals: 20,
      rating: 4.5,
      verified: true
    },
    {
      id: 6,
      title: 'Qu·∫£n l√Ω Facebook Fanpage',
      company: 'Fashion Brand X',
      category: 'social-media',
      budget: '2,000,000 - 3,000,000ƒë',
      duration: '1 th√°ng',
      location: 'Remote',
      postedTime: '2 ng√†y tr∆∞·ªõc',
      description: 'Qu·∫£n l√Ω fanpage Facebook, t·∫°o content, t∆∞∆°ng t√°c v·ªõi kh√°ch h√†ng v√† ch·∫°y ads c∆° b·∫£n.',
      skills: ['Facebook Marketing', 'Content Creation', 'Social Media'],
      urgency: 'low',
      proposals: 25,
      rating: 4.4,
      verified: true
    }
  ];

  const filteredJobs = jobs.filter(job => {
    const matchesSearch = job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         job.company.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         job.skills.some(skill => skill.toLowerCase().includes(searchTerm.toLowerCase()));
    const matchesCategory = selectedCategory === 'all' || job.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  const getUrgencyColor = (urgency: string) => {
    switch (urgency) {
      case 'high': return 'bg-red-100 text-red-800';
      case 'medium': return 'bg-yellow-100 text-yellow-800';
      case 'low': return 'bg-green-100 text-green-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getUrgencyText = (urgency: string) => {
    switch (urgency) {
      case 'high': return 'Kh·∫©n c·∫•p';
      case 'medium': return 'Trung b√¨nh';
      case 'low': return 'Kh√¥ng g·∫•p';
      default: return 'B√¨nh th∆∞·ªùng';
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">Vi·ªác l√†m Micro</h1>
          <p className="text-lg text-gray-600">
            T√¨m c√°c d·ª± √°n ng·∫Øn h·∫°n ph√π h·ª£p v·ªõi k·ªπ nƒÉng c·ªßa b·∫°n v√† b·∫Øt ƒë·∫ßu ki·∫øm ti·ªÅn ngay h√¥m nay
          </p>
        </div>

        {/* Search and Filter */}
        <div className="mb-8 bg-white p-6 rounded-lg shadow-sm">
          <div className="flex flex-col md:flex-row gap-4">
            <div className="flex-1 relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
              <input
                type="text"
                placeholder="T√¨m ki·∫øm c√¥ng vi·ªác, c√¥ng ty, k·ªπ nƒÉng..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
            <button className="flex items-center space-x-2 px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
              <Filter className="h-5 w-5" />
              <span>B·ªô l·ªçc n√¢ng cao</span>
            </button>
          </div>
        </div>

        <div className="flex flex-col lg:flex-row gap-8">
          {/* Sidebar Categories */}
          <div className="lg:w-64">
            <div className="bg-white p-6 rounded-lg shadow-sm mb-6">
              <h3 className="text-lg font-semibold mb-4">Danh m·ª•c c√¥ng vi·ªác</h3>
              <div className="space-y-2">
                {categories.map((category) => (
                  <button
                    key={category.id}
                    onClick={() => setSelectedCategory(category.id)}
                    className={`w-full text-left px-3 py-2 rounded-lg transition-colors flex justify-between items-center ${
                      selectedCategory === category.id
                        ? 'bg-blue-50 text-blue-600 border border-blue-200'
                        : 'hover:bg-gray-50'
                    }`}
                  >
                    <span>{category.name}</span>
                    <span className="text-sm text-gray-500">({category.count})</span>
                  </button>
                ))}
              </div>
            </div>

            {/* Quick Tips */}
            <div className="bg-gradient-to-br from-blue-50 to-purple-50 p-6 rounded-lg">
              <h4 className="font-semibold text-gray-900 mb-3">üí° M·∫πo th√†nh c√¥ng</h4>
              <ul className="text-sm text-gray-600 space-y-2">
                <li>‚Ä¢ Ho√†n thi·ªán profile ƒë·ªÉ tƒÉng uy t√≠n</li>
                <li>‚Ä¢ ƒê·∫∑t gi√° c·∫°nh tranh cho d·ª± √°n ƒë·∫ßu</li>
                <li>‚Ä¢ Giao ti·∫øp r√µ r√†ng v·ªõi kh√°ch h√†ng</li>
                <li>‚Ä¢ Giao h√†ng ƒë√∫ng th·ªùi h·∫°n cam k·∫øt</li>
              </ul>
            </div>
          </div>

          {/* Jobs List */}
          <div className="flex-1">
            <div className="mb-6 flex justify-between items-center">
              <p className="text-gray-600">
                Hi·ªÉn th·ªã {filteredJobs.length} c√¥ng vi·ªác
              </p>
              <select className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                <option>M·ªõi nh·∫•t</option>
                <option>L∆∞∆°ng cao nh·∫•t</option>
                <option>√çt ƒë·ªÅ xu·∫•t nh·∫•t</option>
                <option>G·∫ßn deadline</option>
              </select>
            </div>

            <div className="space-y-6">
              {filteredJobs.map((job) => (
                <div key={job.id} className="bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow p-6 border border-gray-200">
                  <div className="flex justify-between items-start mb-4">
                    <div className="flex-1">
                      <div className="flex items-center space-x-3 mb-2">
                        <h3 className="text-xl font-semibold text-gray-900 hover:text-blue-600 cursor-pointer">
                          {job.title}
                        </h3>
                        {job.verified && (
                          <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-semibold">
                            ‚úì ƒê√£ x√°c minh
                          </span>
                        )}
                        <span className={`text-xs px-2 py-1 rounded-full font-semibold ${getUrgencyColor(job.urgency)}`}>
                          {getUrgencyText(job.urgency)}
                        </span>
                      </div>
                      <div className="flex items-center space-x-4 text-sm text-gray-600 mb-3">
                        <span className="font-medium">{job.company}</span>
                        <div className="flex items-center space-x-1">
                          <Star className="h-4 w-4 text-yellow-400 fill-current" />
                          <span>{job.rating}</span>
                        </div>
                        <div className="flex items-center space-x-1">
                          <MapPin className="h-4 w-4" />
                          <span>{job.location}</span>
                        </div>
                        <span>{job.postedTime}</span>
                      </div>
                    </div>
                    <div className="text-right">
                      <div className="text-lg font-bold text-blue-600 mb-1">{job.budget}</div>
                      <div className="text-sm text-gray-500">{job.duration}</div>
                    </div>
                  </div>

                  <p className="text-gray-700 mb-4 leading-relaxed">
                    {job.description}
                  </p>

                  <div className="flex flex-wrap gap-2 mb-4">
                    {job.skills.map((skill, index) => (
                      <span
                        key={index}
                        className="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm font-medium"
                      >
                        {skill}
                      </span>
                    ))}
                  </div>

                  <div className="flex justify-between items-center">
                    <div className="flex items-center space-x-4 text-sm text-gray-600">
                      <div className="flex items-center space-x-1">
                        <Briefcase className="h-4 w-4" />
                        <span>{job.proposals} ƒë·ªÅ xu·∫•t</span>
                      </div>
                      <div className="flex items-center space-x-1">
                        <Clock className="h-4 w-4" />
                        <span>{job.duration}</span>
                      </div>
                    </div>
                    <button className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2">
                      <span>·ª®ng tuy·ªÉn ngay</span>
                      <ArrowRight className="h-4 w-4" />
                    </button>
                  </div>
                </div>
              ))}
            </div>

            {filteredJobs.length === 0 && (
              <div className="text-center py-12">
                <Briefcase className="h-12 w-12 text-gray-400 mx-auto mb-4" />
                <h3 className="text-lg font-semibold text-gray-900 mb-2">Kh√¥ng t√¨m th·∫•y c√¥ng vi·ªác</h3>
                <p className="text-gray-600">Th·ª≠ thay ƒë·ªïi t·ª´ kh√≥a t√¨m ki·∫øm ho·∫∑c danh m·ª•c</p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default JobsPage;