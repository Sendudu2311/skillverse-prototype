import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { 
  Crown, Check, Star, Bot, GraduationCap, Users, 
  Calendar, Briefcase, Coins, Zap, ArrowRight
} from 'lucide-react';
import '../../styles/PremiumPage.css';

const PremiumPage = () => {
  const navigate = useNavigate();
  const [billingCycle, setBillingCycle] = useState('monthly');
  
  // Mock user data - in real app, this would come from auth context
  const [userEmail] = useState('student@university.edu.vn'); // Mock student email
  const isStudentEligible = userEmail && (userEmail.includes('.edu') || userEmail.includes('@university') || userEmail.includes('@student'));

  const premiumFeatures = [
    {
      icon: Bot,
      title: 'ü§ñ AI Career Coach Pro',
      description: 'Ph√¢n t√≠ch chuy√™n s√¢u & g·ª£i √Ω h·ªçc t·∫≠p c√° nh√¢n h√≥a theo th·ªùi gian th·ª±c',
      highlight: true
    },
    {
      icon: GraduationCap,  
      title: 'üìö Kh√≥a h·ªçc cao c·∫•p',
      description: 'Truy c·∫≠p kh√¥ng gi·ªõi h·∫°n c√°c kh√≥a h·ªçc chuy√™n s√¢u v·ªõi b√†i t·∫≠p th·ª±c t·∫ø'
    },
    {
      icon: Users,
      title: 'üë®‚Äçüè´ Mentor 1:1',
      description: 'ƒê·∫∑t l·ªãch v·ªõi mentor ch·∫•t l∆∞·ª£ng cao, nh·∫≠n ph·∫£n h·ªìi c√° nh√¢n h√≥a'
    },
    {
      icon: Calendar,
      title: 'üìÖ Seminar/Webinar',
      description: 'Tham gia t·∫•t c·∫£ s·ª± ki·ªán, ∆∞u ti√™n ch·ªó ng·ªìi'
    },
    {
      icon: Briefcase,
      title: 'üíº ∆Øu ti√™n vi·ªác l√†m',
      description: 'Portfolio ƒë∆∞·ª£c highlight trong "Top Talent"'
    },
    {
      icon: Coins,
      title: 'üïπÔ∏è T√≠ch ƒëi·ªÉm nhanh x3',
      description: 'Nh·∫≠n nhi·ªÅu coin h∆°n, ƒë·ªïi coin unlock n·ªôi dung premium'
    }
  ];

  const pricingPlans = [
    {
      id: 'basic',
      name: 'Premium Basic',
      description: 'B·∫Øt ƒë·∫ßu v·ªõi AI & kh√≥a h·ªçc',
      monthlyPrice: 79000,
      yearlyPrice: 799000,
      features: [
        'AI Career Coach c∆° b·∫£n',
        'Truy c·∫≠p 50+ kh√≥a h·ªçc Premium',
        'H·ªó tr·ª£ chat 24/7',
        'Coin Wallet c∆° b·∫£n',
        'Huy hi·ªáu Premium Basic'
      ],
      popular: false,
      color: 'basic'
    },
    {
      id: 'plus',
      name: 'Premium Plus',
      description: 'Tr·∫£i nghi·ªám ƒë·∫ßy ƒë·ªß SkillVerse',
      monthlyPrice: 249000,
      yearlyPrice: 2490000,
      features: [
        'T·∫•t c·∫£ t√≠nh nƒÉng Basic',
        'AI Career Coach Pro kh√¥ng gi·ªõi h·∫°n',
        'Mentor 1:1 kh√¥ng gi·ªõi h·∫°n',
        'T·∫•t c·∫£ seminar/webinar mi·ªÖn ph√≠',
        '∆Øu ti√™n vi·ªác l√†m & showcase',
        'Coin Wallet Pro (x3 ƒëi·ªÉm)',
        'Huy hi·ªáu Premium Plus',
        'Portfolio n·ªïi b·∫≠t'
      ],
      popular: true,
      color: 'plus'
    },
    ...(isStudentEligible ? [{
      id: 'student',
      name: 'Student Pack',
      description: 'D√†nh ri√™ng cho sinh vi√™n v·ªõi email .edu',
      monthlyPrice: 20000,
      yearlyPrice: 200000,
      features: [
        'AI Career Coach c∆° b·∫£n',
        'Truy c·∫≠p 30+ kh√≥a h·ªçc Premium',
        'Mentor 1:1 (2 l·∫ßn/th√°ng)',
        'Seminar/webinar c∆° b·∫£n',
        'Coin Wallet sinh vi√™n (x2 ƒëi·ªÉm)',
        'Huy hi·ªáu Student Member',
        'H·ªó tr·ª£ career guidance'
      ],
      popular: false,
      color: 'student',
      studentOnly: true
    }] : [])
  ];

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price);
  };

  const handleUpgrade = (planId: string) => {
    const selectedPlanData = pricingPlans.find(plan => plan.id === planId);
    if (!selectedPlanData) return;

    const price = billingCycle === 'monthly' ? selectedPlanData.monthlyPrice : selectedPlanData.yearlyPrice;
    const originalPrice = billingCycle === 'monthly' ? selectedPlanData.monthlyPrice : selectedPlanData.yearlyPrice;
    
    // Navigate to payment page with plan data
    navigate('/payment', {
      state: {
        type: 'premium',
        title: selectedPlanData.name,
        description: selectedPlanData.description,
        price: price,
        originalPrice: originalPrice,
        billingCycle: billingCycle,
        planId: planId,
        features: selectedPlanData.features,
        isStudent: planId === 'student'
      }
    });
  };

  const getDiscountPercent = (monthly: number, yearly: number) => {
    return Math.round((1 - yearly / (monthly * 12)) * 100);
  };

  return (
    <div className="premium-page">
      {/* Hero Section */}
      <section className="premium-hero">
        <div className="premium-hero__content">
          <div className="premium-hero__badge">
            <Crown className="crown-icon" />
            <span>SkillVerse Premium</span>
          </div>
          <h1 className="premium-hero__title">
            üíé SkillVerse Premium{' '}
            <span className="gradient-text">n√¢ng cao</span>
          </h1>
          <p className="premium-hero__description">
            T·ªëi ƒëa h√≥a hi·ªáu qu·∫£ h·ªçc t·∫≠p v√† ph√°t tri·ªÉn ngh·ªÅ nghi·ªáp v·ªõi c√°c t√≠nh nƒÉng ƒë·ªôc quy·ªÅn.
          </p>
          <div className="premium-hero__stats">
            <div className="premium-stat-item">
              <div className="stat-number">10K+</div>
              <div className="premium-stat-label">Th√†nh vi√™n</div>
            </div>
            <div className="premium-stat-item">
              <div className="stat-number">95%</div>
              <div className="premium-stat-label">H√†i l√≤ng</div>
            </div>
            <div className="premium-stat-item">
              <div className="stat-number">3x</div>
              <div className="premium-stat-label">T·ªëc ƒë·ªô h·ªçc</div>
            </div>
          </div>
        </div>
        <div className="premium-hero__visual">
          <div className="floating-card">
            <Crown className="floating-icon" />
            <div className="floating-text">Premium Active</div>
          </div>
          <div className="floating-card floating-card--2">
            <Star className="floating-icon" />
            <div className="floating-text">4.9‚òÖ Rating</div>
          </div>
          <div className="floating-card floating-card--3">
            <Zap className="floating-icon" />
            <div className="floating-text">AI Powered</div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="premium-features">
        <div className="container">
          <div className="section-header">
            <h2>üîë Quy·ªÅn l·ª£i Premium</h2>
            <p>M·ªü kh√≥a to√†n b·ªô ti·ªÅm nƒÉng v·ªõi c√°c t√≠nh nƒÉng ƒë·ªôc quy·ªÅn</p>
          </div>
          <div className="features-grid">
            {premiumFeatures.map((feature, featureIndex) => (
              <div 
                key={`feature-${featureIndex}`}
                className={`feature-card ${feature.highlight ? 'feature-card--highlight' : ''}`}
              >
                <div className="feature-card__icon">
                  <feature.icon />
                </div>
                <div className="feature-card__content">
                  <h3 className="feature-card__title">{feature.title}</h3>
                  <p className="feature-card__description">{feature.description}</p>
                </div>
                {feature.highlight && (
                  <div className="feature-card__badge">
                    <Star size={16} />
                    <span>N·ªïi b·∫≠t</span>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Pricing Section */}
      <section className="premium-pricing">
        <div className="container">
          <div className="section-header">
            <h2>üí∞ Ch·ªçn g√≥i Premium</h2>
            <p>Linh ho·∫°t thanh to√°n, n√¢ng c·∫•p b·∫•t c·ª© l√∫c n√†o</p>
          </div>

          {/* Billing Toggle */}
          <div className="billing-toggle">
            <button 
              className={`billing-option ${billingCycle === 'monthly' ? 'active' : ''}`}
              onClick={() => setBillingCycle('monthly')}
            >
              Theo th√°ng
            </button>
            <button 
              className={`billing-option ${billingCycle === 'yearly' ? 'active' : ''}`}
              onClick={() => setBillingCycle('yearly')}
            >
              Theo nƒÉm{' '}
              <span className="billing-badge">Ti·∫øt ki·ªám 17%</span>
            </button>
          </div>

          {/* Student Eligibility Notice */}
          {isStudentEligible && (
            <div className="student-notice">
              <div className="student-notice-content">
                <span className="student-notice-icon">üéì</span>
                <div className="student-notice-text">
                  <h4>B·∫°n c√≥ quy·ªÅn s·ª≠ d·ª•ng Student Pack!</h4>
                  <p>V·ªõi email sinh vi√™n ({userEmail}), b·∫°n ƒë∆∞·ª£c gi·∫£m gi√° ƒë·∫∑c bi·ªát ch·ªâ 20,000ƒë/th√°ng</p>
                </div>
              </div>
            </div>
          )}

          <div className="pricing-grid">
            {pricingPlans.map((plan) => (
              <div 
                key={plan.id}
                className={`pricing-card pricing-card--${plan.color} ${plan.popular ? 'pricing-card--popular' : ''}`}
              >
                {plan.popular && (
                  <div className="pricing-badge">
                    <Star size={16} />
                    <span>Ph·ªï bi·∫øn nh·∫•t</span>
                  </div>
                )}
                
                <div className="pricing-card__header">
                  <h3 className="pricing-card__name">{plan.name}</h3>
                  <p className="pricing-card__description">{plan.description}</p>
                </div>

                <div className="pricing-card__price">
                  <div className="price-display">
                    <span className="price-amount">
                      {formatPrice(billingCycle === 'monthly' ? plan.monthlyPrice : plan.yearlyPrice)}
                    </span>
                    <span className="price-period">
                      /{billingCycle === 'monthly' ? 'th√°ng' : 'nƒÉm'}
                    </span>
                    {billingCycle === 'yearly' && (
                      <div className="price-discount">
                        Ti·∫øt ki·ªám {getDiscountPercent(plan.monthlyPrice, plan.yearlyPrice)}%
                      </div>
                    )}
                    {plan.id === 'student' && (
                      <div className="student-badge">
                        üéì D√†nh cho sinh vi√™n
                      </div>
                    )}
                  </div>
                </div>

                <ul className="pricing-card__features">
                  {plan.features.map((feature, featureIndex) => (
                    <li key={`${plan.id}-feature-${featureIndex}`} className="feature-item">
                      <Check size={16} className="feature-check" />
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>

                <button 
                  className={`pricing-card__button ${plan.popular ? 'button--primary' : 'button--outline'}`}
                  onClick={() => handleUpgrade(plan.id)}
                >
                  {plan.id === 'student' ? 'ƒêƒÉng k√Ω Student Pack' : 'N√¢ng c·∫•p'}
                  <ArrowRight size={16} />
                </button>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Testimonials */}
      <section className="premium-testimonials">
        <div className="container">
          <div className="section-header">
            <h2>üí¨ Ng∆∞·ªùi d√πng ƒë√°nh gi√°</h2>
          </div>
          <div className="testimonials-grid">
            <div className="testimonial-card">
              <div className="testimonial-rating">
                {Array.from({ length: 5 }, (_, starIndex) => (
                  <Star key={`testimonial1-star-${starIndex}`} size={16} fill="currentColor" />
                ))}
              </div>
              <p className="testimonial-text">
                "AI Coach gi√∫p t√¥i x√°c ƒë·ªãnh ƒë√∫ng ƒëi·ªÉm y·∫øu v√† t·∫≠p trung v√†o nh·ªØng k·ªπ nƒÉng quan tr·ªçng nh·∫•t. 
                Sau 3 th√°ng, t√¥i ƒë√£ c√≥ ƒë∆∞·ª£c c√¥ng vi·ªác m∆° ∆∞·ªõc!"
              </p>
              <div className="testimonial-author">
                <div className="author-info">
                  <div className="author-name">Nguy·ªÖn Minh Anh</div>
                  <div className="author-title">Frontend Developer</div>
                </div>
              </div>
            </div>
            
            <div className="testimonial-card">
              <div className="testimonial-rating">
                {Array.from({ length: 5 }, (_, starIndex) => (
                  <Star key={`testimonial2-star-${starIndex}`} size={16} fill="currentColor" />
                ))}
              </div>
              <p className="testimonial-text">
                "Mentor 1:1 th·ª±c s·ª± tuy·ªát v·ªùi! ƒê∆∞·ª£c h∆∞·ªõng d·∫´n c√° nh√¢n h√≥a v√† feedback chi ti·∫øt 
                gi√∫p t√¥i ti·∫øn b·ªô nhanh ch√≥ng trong career path."
              </p>
              <div className="testimonial-author">
                <div className="author-info">
                  <div className="author-name">Tr·∫ßn ƒê·ª©c Th√†nh</div>
                  <div className="author-title">Product Manager</div>
                </div>
              </div>
            </div>

            <div className="testimonial-card">
              <div className="testimonial-rating">
                {Array.from({ length: 5 }, (_, starIndex) => (
                  <Star key={`testimonial3-star-${starIndex}`} size={16} fill="currentColor" />
                ))}
              </div>
              <p className="testimonial-text">
                "Premium Plus ƒë√°ng t·ª´ng ƒë·ªìng! Showcase gi√∫p t√¥i ƒë∆∞·ª£c nhi·ªÅu nh√† tuy·ªÉn d·ª•ng ch√∫ √Ω, 
                v√† c√°c seminar ƒë·ªôc quy·ªÅn m·ªü mang t·∫ßm nh√¨n r·∫•t nhi·ªÅu."
              </p>
              <div className="testimonial-author">
                <div className="author-info">
                  <div className="author-name">L√™ Th·ªã H∆∞∆°ng</div>
                  <div className="author-title">UX Designer</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="premium-faq">
        <div className="container">
          <div className="section-header">
            <h2>‚ùì FAQ</h2>
          </div>
          <div className="faq-grid">
            <div className="faq-item">
              <h3>T√¥i c√≥ th·ªÉ h·ªßy Premium b·∫•t c·ª© l√∫c n√†o kh√¥ng?</h3>
              <p>C√≥, b·∫°n c√≥ th·ªÉ h·ªßy Premium b·∫•t c·ª© l√∫c n√†o. B·∫°n s·∫Ω v·∫´n s·ª≠ d·ª•ng ƒë∆∞·ª£c c√°c t√≠nh nƒÉng Premium ƒë·∫øn h·∫øt chu k·ª≥ thanh to√°n hi·ªán t·∫°i.</p>
            </div>
            <div className="faq-item">
              <h3>Premium c√≥ h·ªó tr·ª£ thanh to√°n qua nh·ªØng ph∆∞∆°ng th·ª©c n√†o?</h3>
              <p>Ch√∫ng t√¥i h·ªó tr·ª£ thanh to√°n qua th·∫ª t√≠n d·ª•ng/ghi n·ª£, MoMo, ZaloPay, VNPay v√† chuy·ªÉn kho·∫£n ng√¢n h√†ng.</p>
            </div>
            <div className="faq-item">
              <h3>T√¥i c√≥ th·ªÉ n√¢ng c·∫•p t·ª´ Basic l√™n Plus kh√¥ng?</h3>
              <p>Ho√†n to√†n c√≥ th·ªÉ! B·∫°n ch·ªâ c·∫ßn thanh to√°n ph·∫ßn ch√™nh l·ªách v√† s·∫Ω ƒë∆∞·ª£c n√¢ng c·∫•p ngay l·∫≠p t·ª©c.</p>
            </div>
            <div className="faq-item">
              <h3>Student Pack c√≥ nh·ªØng ƒëi·ªÅu ki·ªán g√¨?</h3>
              <p>Student Pack ch·ªâ d√†nh cho sinh vi√™n c√≥ email .edu ho·∫∑c email tr∆∞·ªùng ƒë·∫°i h·ªçc. B·∫°n c·∫ßn x√°c th·ª±c email sinh vi√™n ƒë·ªÉ ƒë∆∞·ª£c √°p d·ª•ng gi√° ∆∞u ƒë√£i.</p>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

export default PremiumPage;
